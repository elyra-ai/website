"use strict";(self.webpackChunkelyra_ai_site=self.webpackChunkelyra_ai_site||[]).push([[1207],{1794:function(e,t,n){n.r(t),n.d(t,{Title:function(){return s},_frontmatter:function(){return d},default:function(){return c}});var a,l=n(3366),r=(n(7294),n(4983)),o=n(4295),i=["components"],s=function(){return(0,r.kt)("span",null,"Logging")},d={},u=(a="PageDescription",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)}),m={Title:s,_frontmatter:d},p=o.Z;function c(e){var t=e.components,n=(0,l.Z)(e,i);return(0,r.kt)(p,Object.assign({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(u,{mdxType:"PageDescription"},(0,r.kt)("p",null,"This section will go over how to properly log messages in Elyra.")),(0,r.kt)("h2",null,"Pipelines Extension Logging"),(0,r.kt)("h3",null,"Python"),(0,r.kt)("p",null,"The Kubeflow Pipelines extension uses a custom IPython handler to handle interactions with\nthe Notebook server instance. By extending the IPython handler we are able to leverage Tornado logging\nsince the Jupyter Notebook server uses Tornado as its web framework. "),(0,r.kt)("h5",null,"Pipelines -> IPythonHandler -> Tornado.log -> lib/logging"),(0,r.kt)("h4",null,"When to add log messages"),(0,r.kt)("p",null,"Use INFO level for routines(functions), like when handling requests or state changes and DEBUG for troubleshooting and diagnostics. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'  def foo (arg):\n    self.debug.info("doing something with this %s", arg)\n    do something with arg\n    self.log.info("Result of arg is ... %s", result)\n')),(0,r.kt)("p",null,"Use WARNING level when it is important, but not an error, for example, when a user attempts to login with an incorrect password"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'  def authenticate(username, password):\n    if username and password doesn\'t work:\n        self.log.warn("Failed login attempt from %s : $s", username, password)\n')),(0,r.kt)("p",null,"Use ERROR level when something is actually wrong, like when an exception is thrown, IO operation failure or connectivity\nissue (e.g. Minio client cant connect to endpoint)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'    try:\n        if not minio_client.bucket_exists(bucket_name):\n            minio_client.make_bucket(bucket_name)\n    except ResponseError:\n        self.log.error("Minio error", exc_info=True)\n')),(0,r.kt)("h4",null,"Adding log messages"),(0,r.kt)("p",null,"Add log messages by inserting statements as follows:\n",(0,r.kt)("inlineCode",{parentName:"p"},'self.log.debug("insert debug message", *args, *kwargs)'),"\nUse the appropriate logging levels when inserting specific messages e.g. log.debug, log.warn etc.  "),(0,r.kt)("p",null,"The log output will be color coded, legend as follows:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Log Level"),(0,r.kt)("th",{parentName:"tr",align:null},"Color"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DEBUG"),(0,r.kt)("td",{parentName:"tr",align:null},"Blue")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"INFO"),(0,r.kt)("td",{parentName:"tr",align:null},"Green")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"WARNING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yellow")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ERROR"),(0,r.kt)("td",{parentName:"tr",align:null},"Red")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CRITICAL"),(0,r.kt)("td",{parentName:"tr",align:null},"Magenta")))),(0,r.kt)("h4",null,"Setting the Log Level"),(0,r.kt)("p",null,"The default Log Level is set to INFO. If you need to increase log verbosity, you can start Jupyterlab with\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"--debug")," option for example:  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    jupyter lab --debug <other options>\n")),(0,r.kt)("p",null,"If too verbose, you can filter out only the most important messages by directly setting the value\nwith ",(0,r.kt)("inlineCode",{parentName:"p"},"--log-level=")," using one of the following ",(0,r.kt)("inlineCode",{parentName:"p"},"{DEBUG|INFO|WARN|ERROR|CRITICAL}"),".  For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    jupyter lab --log-level=WARN <other options>\n")),(0,r.kt)("p",null,"indicates that only log levels of ",(0,r.kt)("inlineCode",{parentName:"p"},"WARN")," (or higher: ",(0,r.kt)("inlineCode",{parentName:"p"},"ERROR")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"CRITICAL"),") will be logged."),(0,r.kt)("h3",null,"TypeScript / JS"),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"console.log()"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"console.warn()")," to output debug messages"))}c.isMDXComponent=!0},4295:function(e,t,n){n.d(t,{Z:function(){return y}});var a=n(7294),l=n(8650),r=n.n(l),o=n(5444),i=n(9403),s=n(5611),d=n(5900),u=n.n(d),m=function(e){var t,n=e.title,l=e.theme,r=e.tabs,o=void 0===r?[]:r;return a.createElement("div",{className:u()("PageHeader-module--page-header--NqfPe",(t={},t["PageHeader-module--with-tabs--vbQ-W"]=o.length,t["PageHeader-module--dark-mode--WCeH8"]="dark"===l,t))},a.createElement("div",{className:"bx--grid"},a.createElement("div",{className:"bx--row"},a.createElement("div",{className:"bx--col-lg-12"},a.createElement("h1",{id:"page-title",className:"PageHeader-module--text--Er2EO"},n)))))},p=function(e){var t=e.relativePagePath,n=e.repository,l=(0,o.useStaticQuery)("1364590287").site.siteMetadata.repository,r=n||l,i=r.baseUrl,s=r.subDirectory,d=i+"/edit/"+r.branch+s+"/src/pages"+t;return i?a.createElement("div",{className:"bx--row EditLink-module--row--BEmSX"},a.createElement("div",{className:"bx--col"},a.createElement("a",{className:"EditLink-module--link--IDrl1",href:d},"Edit this page on GitHub"))):null},c=n(4275),g=n(1721),k=function(e){function t(){return e.apply(this,arguments)||this}return(0,g.Z)(t,e),t.prototype.render=function(){var e=this.props,t=e.title,n=e.tabs,l=e.slug,i=l.split("/").filter(Boolean).slice(-1)[0],s=n.map((function(e){var t,n=r()(e,{lower:!0,strict:!0}),s=n===i,d=new RegExp(i+"/?(#.*)?$"),m=l.replace(d,n);return a.createElement("li",{key:e,className:u()((t={},t["PageTabs-module--selected-item--aBB0K"]=s,t),"PageTabs-module--list-item--024o6")},a.createElement(o.Link,{className:"PageTabs-module--link--Kz-7R",to:""+m},e))}));return a.createElement("div",{className:"PageTabs-module--tabs-container--Cdfzw"},a.createElement("div",{className:"bx--grid"},a.createElement("div",{className:"bx--row"},a.createElement("div",{className:"bx--col-lg-12 bx--col-no-gutter"},a.createElement("nav",{"aria-label":t},a.createElement("ul",{className:"PageTabs-module--list--xLqxG"},s))))))},t}(a.Component),h=k,b=n(2881),N=n(6958),f=n(36),w=function(e){var t=e.date,n=new Date(t);return t?a.createElement(f.X2,{className:"last-modified-date-module--row--XJoYQ"},a.createElement(f.sg,null,a.createElement("div",{className:"last-modified-date-module--text--ogPQF"},"Page last updated: ",n.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null},y=function(e){var t=e.pageContext,n=e.children,l=e.location,d=e.Title,u=t.frontmatter,g=void 0===u?{}:u,k=t.relativePagePath,f=t.titleType,y=g.tabs,v=g.title,E=g.theme,x=g.description,P=g.keywords,T=g.date,C=(0,N.Z)().interiorTheme,R=(0,o.useStaticQuery)("2456312558").site.pathPrefix,I=R?l.pathname.replace(R,""):l.pathname,L=y?I.split("/").filter(Boolean).slice(-1)[0]||r()(y[0],{lower:!0}):"",D=E||C;return a.createElement(s.Z,{tabs:y,homepage:!1,theme:D,pageTitle:v,pageDescription:x,pageKeywords:P,titleType:f},a.createElement(m,{title:d?a.createElement(d,null):v,label:"label",tabs:y,theme:D}),y&&a.createElement(h,{title:v,slug:I,tabs:y,currentTab:L}),a.createElement(b.Z,{padded:!0},n,a.createElement(p,{relativePagePath:k}),a.createElement(w,{date:T})),a.createElement(c.Z,{pageContext:t,location:l,slug:I,tabs:y,currentTab:L}),a.createElement(i.Z,null))}}}]);
//# sourceMappingURL=component---src-pages-dev-guide-logging-mdx-dac5c87dc2b2b998a7ae.js.map