{"version":3,"file":"component---src-pages-getting-started-ai-elyra-overview-mdx-3afe4b9c4868c1937b8c.js","mappings":"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","sources":["webpack://elyra-ai-site/./src/pages/getting-started-ai/elyra-overview.mdx","webpack://elyra-ai-site/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://elyra-ai-site/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://elyra-ai-site/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://elyra-ai-site/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://elyra-ai-site/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://elyra-ai-site/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://elyra-ai-site/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://elyra-ai-site/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://elyra-ai-site/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://elyra-ai-site/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://elyra-ai-site/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://elyra-ai-site/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://elyra-ai-site/./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/akchin/github/website/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const Title = () => <span>\n    Elyra AI overview\n  </span>;\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst Row = makeShortcode(\"Row\");\nconst Column = makeShortcode(\"Column\");\nconst layoutProps = {\n  Title,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Elyra is a set of AI-centric extensions to JupyterLab Notebooks. The main features include the following:`}</p>\n    </PageDescription>\n    <AnchorLinks small mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">AI Pipelines visual editor</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Ability to run a notebook, Python or R script as a batch job</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Reusable Code Snippets</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Hybrid runtime support</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Python and R script editors with local/remote execution capabilities</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Python script navigation using auto-generated Table of Contents</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Language Server Protocol integration</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Version control using git integration</AnchorLink>\n    </AnchorLinks>\n    <p>{`You can try out some of these features using the getting started tour on `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/elyra-ai/elyra#using-binder\"\n      }}>{`Binder`}</a>{` without having to install anything.`}</p>\n    <h2>{`AI Pipelines visual editor`}</h2>\n    <p>{`Building an AI pipeline for a model is hard, breaking down and modularizing a pipeline is harder. A typical machine/deep learning pipeline begins as a series of preprocessing steps followed by experimentation/optimization and finally deployment. Each of these steps represents a challenge in the model development lifecycle.`}</p>\n    <p>{`Elyra provides a `}<strong parentName=\"p\">{`Pipeline Visual Editor`}</strong>{` for building AI pipelines from notebooks, Python scripts and R scripts, simplifying the conversion of multiple notebooks or scripts files into batch jobs or workflows.`}</p>\n    <p>{`Currently, pipelines can be executed locally in JupyterLab, on Kubeflow Pipelines, or with Apache Airflow.`}</p>\n    <Row mdxType=\"Row\">\n    <Column colMd={7} colLg={7} mdxType=\"Column\">\n        <img {...{\n          \"src\": \"images/ai/pipeline-in-editor.png\",\n          \"alt\": \"AI Pipeline in editor\"\n        }}></img>\n      </Column>\n    </Row>\n    <p>{`Learn more about the Pipeline Visual Editor in the AI Pipelines topic in the User Guide, explore the tutorials, or example pipelines.`}</p>\n    <p>{`The pipeline editor feature can optionally be installed as a stand-alone extension.`}</p>\n    <h2>{`Ability to run a notebook, Python or R script as a batch job`}</h2>\n    <p>{`Elyra extends the Jupyter Notebook UI to to allow for execution of a notebook as a batch job in local or remote cloud environments. This feature leverages the AI pipelines feature and requires either a Kubeflow Pipelines or Apache Airflow deployment via a runtime configuration.`}</p>\n    <p>{`To run a notebook as a batch job open the notebook and select `}<inlineCode parentName=\"p\">{`Run as Pipeline`}</inlineCode>{` button from the menu bar.`}</p>\n    <Row mdxType=\"Row\">\n    <Column colMd={7} colLg={7} mdxType=\"Column\">\n        <img {...{\n          \"src\": \"images/ai/run-notebook-as-pipeline.gif\",\n          \"alt\": \"run notebook as pipeline\"\n        }}></img>\n      </Column>\n    </Row>\n    <p>{`Similarly, to submit a Python or R script as a batch job, open a the script file and select `}<inlineCode parentName=\"p\">{`Run as Pipeline`}</inlineCode>{` button from the editor toolbar.`}</p>\n    <h2>{`Reusable Code Snippets`}</h2>\n    <p>{`The Code Snippet editor introduces support for reusable code fragments, making programming in JupyterLab more efficient by reducing repetitive work.`}</p>\n    <p>{`For information on how to manage and use code snippets refer to the Code Snippets topic in the User Guide.`}</p>\n    <p>{`The code snippet feature can optionally be installed as a stand-alone extension.`}</p>\n    <Row mdxType=\"Row\">\n    <Column colMd={7} colLg={7} mdxType=\"Column\">\n        <img {...{\n          \"src\": \"images/ai/code-snippet-expanded.png\",\n          \"alt\": \"code snippet expanded\"\n        }}></img>\n      </Column>\n    </Row>\n    <h2>{`Hybrid runtime support`}</h2>\n    <p>{`Elyra leverages Jupyter Enterprise Gateway to enable Jupyter Notebooks to share resources across distributed clusters such as Apache Spark, Kubernetes, OpenShift, and the like.`}</p>\n    <p>{`It simplifies the task of running notebooks interactively on cloud machines, seamlessly leveraging the power of cloud-based resources such as GPUs and TPUs.`}</p>\n    <h2>{`Python and R scripts execution support`}</h2>\n    <p>{`Elyra contributes a Script editor with support for Python and R files, which can take advantage of the Hybrid Runtime Support enabling users to locally edit scripts and execute them against local or cloud-based resources seamlessly.`}</p>\n    <Row mdxType=\"Row\">\n    <Column colMd={7} colLg={7} mdxType=\"Column\">\n        <img {...{\n          \"src\": \"images/ai/python-editor.png\",\n          \"alt\": \"python editor\"\n        }}></img>\n      </Column>\n    </Row>\n    <p>{`For information on how to use the Script editor refer to the Enhanced Script Support topic in the User Guide.`}</p>\n    <p>{`The Script editor feature can optionally be installed as a stand-alone extension.`}</p>\n    <h2>{`Notebook navigation using auto-generated Table of Contents`}</h2>\n    <p>{`The enhanced notebook navigation recognizes markdown headings and auto-generates a Table of Contents providing enhanced navigation capabilities.`}</p>\n    <p>{`To access the Table of Contents, open a notebook and select the Table of Contents tab from the sidebar.`}</p>\n    <h2>{`Language Server Protocol integration`}</h2>\n    <p>{`The JupyterLab Language Server Protocol (LSP) integration enhances the development experience in the notebook editor and file editors, delivering features common in IDEs such as autocompletion, code navigation, hover suggestions, code linting, and renaming.`}</p>\n    <p>{`By default, Elyra installs the Python Language Server package, enabling the productivity features in the notebook editor and the Python editor. Support for other languages can be added by manually installing additional Language Server packages and their prerequisites.`}</p>\n    <p>{`Refer to the `}<inlineCode parentName=\"p\">{`jupyterlab-lsp`}</inlineCode>{` extension documentation for a full list of supported Language Servers and installation instructions.`}</p>\n    <Row mdxType=\"Row\">\n    <Column colMd={7} colLg={7} mdxType=\"Column\">\n        <img {...{\n          \"src\": \"images/ai/lsp.gif\",\n          \"alt\": \"language server protocol\"\n        }}></img>\n      </Column>\n    </Row>\n    <p>{`To learn more about the `}<inlineCode parentName=\"p\">{`jupyterlab-lsp`}</inlineCode>{` extension and its features check out the repository.`}</p>\n    <h2>{`Version control using git integration`}</h2>\n    <p>{`With the integrated Git version control support users can clone Git repositories, track and manage changes (e.g. by comparing, committing, or discarding them) and share among team members - fostering productivity by enabling a collaborative working environment.`}</p>\n    <p>{`To learn more about the git extension or how to install it individually refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/jupyterlab/jupyterlab-git\"\n      }}>{`jupyterlab-git`}</a>{` repository.`}</p>\n    <Row mdxType=\"Row\">\n    <Column colMd={7} colLg={7} mdxType=\"Column\">\n        <img {...{\n          \"src\": \"images/ai/git.png\",\n          \"alt\": \"git integration\"\n        }}></img>\n      </Column>\n    </Row>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--b8JtW\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--WwZFh\";\nexport var darkMode = \"PageHeader-module--dark-mode--WCeH8\";\nexport var pageHeader = \"PageHeader-module--page-header--NqfPe\";\nexport var text = \"PageHeader-module--text--Er2EO\";\nexport var withTabs = \"PageHeader-module--with-tabs--vbQ-W\";","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--uI0cF\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--HxjcS\";\nexport var link = \"EditLink-module--link--IDrl1\";\nexport var row = \"EditLink-module--row--BEmSX\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--OC59x\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--5I6-L\";\nexport var link = \"PageTabs-module--link--Kz-7R\";\nexport var list = \"PageTabs-module--list--xLqxG\";\nexport var listItem = \"PageTabs-module--list-item--024o6\";\nexport var selectedItem = \"PageTabs-module--selected-item--aBB0K\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--Cdfzw\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--QgCc7\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--kel8a\";\nexport var row = \"last-modified-date-module--row--XJoYQ\";\nexport var text = \"last-modified-date-module--text--ogPQF\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"names":["Title","_frontmatter","makeShortcode","name","props","console","warn","PageDescription","AnchorLinks","AnchorLink","Row","Column","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","small","parentName","colMd","colLg","isMDXComponent","title","theme","tabs","className","cx","length","id","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","PageTabs","render","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","React","date","lastModified","Date","toLocaleDateString","day","year","month","pageContext","children","location","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils"],"sourceRoot":""}