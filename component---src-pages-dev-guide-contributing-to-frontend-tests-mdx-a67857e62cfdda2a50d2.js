"use strict";(self.webpackChunkelyra_ai_site=self.webpackChunkelyra_ai_site||[]).push([[8373],{8932:function(e,t,n){n.r(t),n.d(t,{Title:function(){return o},_frontmatter:function(){return c},default:function(){return m}});var a,r=n(3366),s=(n(7294),n(4983)),i=n(4295),l=["components"],o=function(){return(0,s.kt)("span",null,"Contributing to frontend tests")},c={},d=(a="PageDescription",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,s.kt)("div",e)}),p={Title:o,_frontmatter:c},u=i.Z;function m(e){var t=e.components,n=(0,r.Z)(e,l);return(0,s.kt)(u,Object.assign({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)(d,{mdxType:"PageDescription"},(0,s.kt)("p",null,"Elyra uses two types of frontend tests: integration tests (which use ",(0,s.kt)("a",{parentName:"p",href:"https://docs.cypress.io/"},"cypress"),") and unit tests (which use ",(0,s.kt)("a",{parentName:"p",href:"https://jestjs.io/docs/en/getting-started"},"jest"),"). ")),(0,s.kt)("h2",null,"Integration tests"),(0,s.kt)("p",null,"Before running integration tests, docker needs to be installed and running on your machine. There are two ways to run the integration tests: to only see the output logs from all of the integration tests, run ",(0,s.kt)("inlineCode",{parentName:"p"},"make test-integration")," from the root directory. To debug tests that are going wrong or develop new tests, run ",(0,s.kt)("inlineCode",{parentName:"p"},"make test-integration-debug")," - this will open an interactive tool for writing and debugging tests."),(0,s.kt)("p",null,"Elyra’s integration tests automatically start JupyterLab and visit / interact with pages through cypress API calls. The tests use the cypress API to check for the existence of various buttons and visual elements. Refer to the ",(0,s.kt)("a",{parentName:"p",href:"https://docs.cypress.io/api/api/table-of-contents.html"},"cypress API")," for more details."),(0,s.kt)("p",null,"New integration tests can be added to ",(0,s.kt)("inlineCode",{parentName:"p"},"tests/integration"),". "),(0,s.kt)("h2",null,"Unit tests"),(0,s.kt)("p",null,"To run all of the unit tests, use ",(0,s.kt)("inlineCode",{parentName:"p"},"make test-ui-unit")," from the root directory. To run the unit tests for a specific Elyra package, simply run ",(0,s.kt)("inlineCode",{parentName:"p"},"jest")," from that package’s directory (under ",(0,s.kt)("inlineCode",{parentName:"p"},"packages/"),"). For writing tests, ",(0,s.kt)("inlineCode",{parentName:"p"},"jest")," has a watch mode option: just run ",(0,s.kt)("inlineCode",{parentName:"p"},"jest --watch"),". "),(0,s.kt)("p",null,"Elyra’s unit tests test the various classes and objects used by Elyra extensions. Refer to the ",(0,s.kt)("a",{parentName:"p",href:"https://jestjs.io/docs/en/getting-started"},"jest API")," for more details. "),(0,s.kt)("p",null,"To add unit tests for a package that doesn’t have tests set up, some configuration files are required. In the directory for the package being tested, add a file titled ",(0,s.kt)("inlineCode",{parentName:"p"},"jest.config.js")," that contains the following:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"module.exports = require('../../testutils/jest.config');\n")),(0,s.kt)("p",null,"Then, in the ",(0,s.kt)("inlineCode",{parentName:"p"},"package.json"),", add the following under ",(0,s.kt)("inlineCode",{parentName:"p"},"'scripts'"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'"test": "jest",\n"build:test": "tsc --build tsconfig.test.json",\n')),(0,s.kt)("p",null,"And the following under ",(0,s.kt)("inlineCode",{parentName:"p"},"'dev_dependencies'"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'"@jupyterlab/testutils": "^1.0.0",\n"@types/enzyme": "^3.10.5",\n"@types/enzyme-adapter-react-16": "^1.0.6",\n"@types/jest": "^23.3.11",\n"enzyme": "^3.11.0",\n"enzyme-adapter-react-16": "^1.15.3",\n"install": "^0.13.0",\n"jest": "^24.7.1",\n"jest-raw-loader": "^1.0.1",\n"ts-jest": "^24.0.2",\n')),(0,s.kt)("p",null,"Create a file ",(0,s.kt)("inlineCode",{parentName:"p"},"tsconfig.test.json")," that contains:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'{\n  "extends": "../../tsconfigbase.test",\n  "include": ["src/*", "test/*"],\n  "references": []\n}\n')),(0,s.kt)("p",null,"Finally, create a folder called ",(0,s.kt)("inlineCode",{parentName:"p"},"test")," in the ",(0,s.kt)("inlineCode",{parentName:"p"},"src")," directory of the package being tested, and add tests using the file extension ",(0,s.kt)("inlineCode",{parentName:"p"},".spec.ts"),"."))}m.isMDXComponent=!0},4295:function(e,t,n){n.d(t,{Z:function(){return E}});var a=n(7294),r=n(8650),s=n.n(r),i=n(5444),l=n(9403),o=n(5611),c=n(5900),d=n.n(c),p=function(e){var t,n=e.title,r=e.theme,s=e.tabs,i=void 0===s?[]:s;return a.createElement("div",{className:d()("PageHeader-module--page-header--NqfPe",(t={},t["PageHeader-module--with-tabs--vbQ-W"]=i.length,t["PageHeader-module--dark-mode--WCeH8"]="dark"===r,t))},a.createElement("div",{className:"bx--grid"},a.createElement("div",{className:"bx--row"},a.createElement("div",{className:"bx--col-lg-12"},a.createElement("h1",{id:"page-title",className:"PageHeader-module--text--Er2EO"},n)))))},u=function(e){var t=e.relativePagePath,n=e.repository,r=(0,i.useStaticQuery)("1364590287").site.siteMetadata.repository,s=n||r,l=s.baseUrl,o=s.subDirectory,c=l+"/edit/"+s.branch+o+"/src/pages"+t;return l?a.createElement("div",{className:"bx--row EditLink-module--row--BEmSX"},a.createElement("div",{className:"bx--col"},a.createElement("a",{className:"EditLink-module--link--IDrl1",href:c},"Edit this page on GitHub"))):null},m=n(4275),g=n(1721),h=function(e){function t(){return e.apply(this,arguments)||this}return(0,g.Z)(t,e),t.prototype.render=function(){var e=this.props,t=e.title,n=e.tabs,r=e.slug,l=r.split("/").filter(Boolean).slice(-1)[0],o=n.map((function(e){var t,n=s()(e,{lower:!0,strict:!0}),o=n===l,c=new RegExp(l+"/?(#.*)?$"),p=r.replace(c,n);return a.createElement("li",{key:e,className:d()((t={},t["PageTabs-module--selected-item--aBB0K"]=o,t),"PageTabs-module--list-item--024o6")},a.createElement(i.Link,{className:"PageTabs-module--link--Kz-7R",to:""+p},e))}));return a.createElement("div",{className:"PageTabs-module--tabs-container--Cdfzw"},a.createElement("div",{className:"bx--grid"},a.createElement("div",{className:"bx--row"},a.createElement("div",{className:"bx--col-lg-12 bx--col-no-gutter"},a.createElement("nav",{"aria-label":t},a.createElement("ul",{className:"PageTabs-module--list--xLqxG"},o))))))},t}(a.Component),f=h,k=n(2881),b=n(6958),y=n(36),N=function(e){var t=e.date,n=new Date(t);return t?a.createElement(y.X2,{className:"last-modified-date-module--row--XJoYQ"},a.createElement(y.sg,null,a.createElement("div",{className:"last-modified-date-module--text--ogPQF"},"Page last updated: ",n.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null},E=function(e){var t=e.pageContext,n=e.children,r=e.location,c=e.Title,d=t.frontmatter,g=void 0===d?{}:d,h=t.relativePagePath,y=t.titleType,E=g.tabs,v=g.title,w=g.theme,C=g.description,P=g.keywords,x=g.date,j=(0,b.Z)().interiorTheme,T=(0,i.useStaticQuery)("2456312558").site.pathPrefix,D=T?r.pathname.replace(T,""):r.pathname,Z=E?D.split("/").filter(Boolean).slice(-1)[0]||s()(E[0],{lower:!0}):"",B=w||j;return a.createElement(o.Z,{tabs:E,homepage:!1,theme:B,pageTitle:v,pageDescription:C,pageKeywords:P,titleType:y},a.createElement(p,{title:c?a.createElement(c,null):v,label:"label",tabs:E,theme:B}),E&&a.createElement(f,{title:v,slug:D,tabs:E,currentTab:Z}),a.createElement(k.Z,{padded:!0},n,a.createElement(u,{relativePagePath:h}),a.createElement(N,{date:x})),a.createElement(m.Z,{pageContext:t,location:r,slug:D,tabs:E,currentTab:Z}),a.createElement(l.Z,null))}}}]);
//# sourceMappingURL=component---src-pages-dev-guide-contributing-to-frontend-tests-mdx-a67857e62cfdda2a50d2.js.map